{ xs.ixml:  grammar for sentential logic }
xs-formulas = os, formula++os, os.
{ Formulas in general }
formula = basic-formula | not | and | or | implies | iff.
    not = (NOT, os)+, basic-formula.
    and = basic-formula ++ (os, AND, os), os, AND, os, (basic-formula | not).
     or = basic-formula ++ (os, OR, os),  os, OR,  os, (basic-formula | not).
implies = basic-formula, os, IMPLIES, os, (basic-formula | not).
    iff = basic-formula, os, IFF, os, (basic-formula | not).
{ XS Basic formulas }
-basic-formula = prop-var | prop-constant 
               | -"(", os, -formula, os, -")"
               | -"[", os, -formula, os, -"]".

{ XS Atomics:  propositional variables and constants }
prop-var = @name.
prop-constant = quoted-name; quoted-string.
-quoted-name = -#27, @name, -#27 { #27 is typewriter apostrophe }
             | -#60, @name, -#27 { #60 is typewriter grave accent }
             | -#2018, @name, -#2019 { hi 6, hi 9 }
             | -#203A, @name, -#2039 { single guillemets pointing in }
             | -#2039, @name, -#203A { single guillemets pointing out }
             .
@quoted-string > string =
                 -#22, (~[#22; #A]; (#22, #22))*, -#22
               | -#60, -#60, ~[#22; #60; #A]*, -#27, -#27 
               | -#60, -#60, ~[#22; #60; #A]*, -#22 
               | -#201C, ~[#201C; #201D; #A]*, -#201D
               | -#AB, ~[#AB; #BB; #A]*, -#BB
               | -#BB, ~[#AB; #BB; #A]*, -#AB
               .

{ Logical operators }
@NOT = "not"; "NOT";
       "-"; "—" { #2014 em dash };
       "¬" { #AC not sign }; 
       "~" { #7E tilde }; 
       "⁓" { #2053 swung dash }. 
@AND = "and"; "AND"; 
       "∧" { #2227 }; 
       "&"; "&&"; "\lor"; "\or";
       "/\" { emacs here wants a " };
       "\land"; "\and"; "\wedge".
@OR = "or"; "OR";
      "|"; "||"; 
      "∨" { #2228 logical or };
      "\/"; "\lor"; "\or"; "\vee".
@IMPLIES = "implies"; "IMPLIES"; 
           "only", os, "if"; "ONLY", os, "IF";
           "⊃" { #2283 superset of };
           "→" { #2192 right arrow }; 
           "->";
           "⇒" { #21D2 right double arrow }; 
           "=>".
@IFF = "iff"; "IFF";
       "↔" { #2194 left right arrow };
       "<->";
       "⇔" { #21D4 left right double arrow };
       "<=>";
       "≡" { #2261 identical to };
       "\equiv".


{ Basics:  names, whitespace, comments }
name = letter, namechar*.
-letter = [L].
-namechar = letter; digit; ["-_"].
-digit = [Nd].
-whitespace = -[Zs; #9; #A; #D].
-RS = (whitespace; comment)+.
-os = (whitespace; comment)*.
      comment = -"/*", comment-data, -"*/".
-comment-data = ("*"+, ~["/*"] 
                | "/"*, (comment | ~["/*"]))*, 
                "*"*.
